services:
  api_gateway:
    build: ./api_gateway
    ports:
      - "5000:5000"
    depends_on:
      - user_service
      - event_service
    networks:
      - microservices_network

  user_service:
    build: ./user_service
    ports:
      - "5001:5001"
    environment:
      MYSQL_HOST: user_db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_USER_DB}
    depends_on:
      - user_db
    networks:
      - microservices_network

  user_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_USER_DB}
    volumes:
      - user_db_data:/var/lib/mysql
      - ./user_service/user_schema.sql:/docker-entrypoint-initdb.d/user_schema.sql
    networks:
      - microservices_network

  event_service:
    build: ./event_service
    ports:
      - "5002:5002" 
    environment:
      MYSQL_HOST: event_db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_EVENT_DB}
    depends_on:
      - event_db
    networks:
      - microservices_network

  event_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_EVENT_DB}
    volumes:
      - event_db_data:/var/lib/mysql
      - ./event_service/event_schema.sql:/docker-entrypoint-initdb.d/event_schema.sql
    networks:
      - microservices_network

volumes:
  user_db_data:
  event_db_data:

networks:
  microservices_network:
    driver: bridge